{"version":3,"sources":["services/dungeonService.js","components/CustomStyled.js","components/NavBar.js","components/CharacterSummary.js","services/helper.js","containers/OwnerView.js","components/Profile.js","components/Attributes.js","components/Skills.js","components/Weapons.js","components/Inventory.js","components/SpellDetail.js","components/SpellPage.js","containers/SpellBook.js","containers/CharacterSheet.js","containers/PartyView.js","App.js","serviceWorker.js","index.js"],"names":["apiDomain","process","getWelcome","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","fetch","concat","sent","abrupt","text","stop","apply","this","arguments","getCharacter","_ref2","_callee2","characterId","_args2","_context2","length","undefined","json","checkUserAuth","_ref3","_callee3","user","_context3","_x","_x2","dungeonService","saveCharacter","_ref4","_callee4","character","_context4","method","body","JSON","stringify","headers","Content-Type","t0","console","error","_x3","watchCharacters","characterIds","WebSocket","join","getCharactersByOwner","_ref5","_callee5","owner","_args5","_context5","getLevelInfo","_ref6","_callee6","xp","_context6","_x4","getRaces","_ref7","_callee7","_context7","getClasses","_ref8","_callee8","_context8","_x5","getClass","_ref9","_callee9","name","_context9","_x6","getWeapons","_ref10","_callee10","_context10","getSpells","_ref11","_callee11","slugs","_context11","_x7","getSpellsForLevel","_ref12","_callee12","level","_context12","_x8","Spacer","styled","span","_templateObject","TopAnchor","_templateObject2","BottomAnchor","_templateObject3","Card","div","_templateObject4","HeaderBar","_templateObject5","ActionBar","_templateObject6","Row","_templateObject7","RowCenter","_templateObject8","Column","_templateObject9","ContentWithSideBar","_templateObject10","SideBar","_templateObject11","SideBarToggle","_templateObject12","BasicBox","_templateObject13","NavBar","_useState","useState","_useState2","slicedToArray","welcome","setWelcome","useEffect","_getWelcome","welcomeServer","DungeonService","react_default","createElement","AppBar","position","Toolbar","react_router_dom","to","IconButton","Avatar","alt","src","photo","CharacterSummary","save","add","linkTo","open","highlight","style","background","race","class","className","onClick","InfoRow","TextField","variant","disabled","type","label","value","hp","initiative","defaultProps","CharacterSummary_templateObject","calculateModifier","x","z","y","Math","floor","skillsArray","check","OwnerView","characters","updateCharacters","_useState3","_useState4","classes","setClasses","_useState5","_useState6","races","setRaces","_useState7","_useState8","values","setValues","_useState9","_useState10","party","updateParty","_useState11","_useState12","isAdding","setAdding","_getCharactersByOwner","characterList","_loadBackgroundOptions","raceList","classList","handleValueChange","field","numeric","e","objectSpread","defineProperty","target","toggleSKill","arr","proSkills","i","findIndex","skill","toConsumableArray","slice","_addCharacter","data","loadBackgroundOptions","characterCards","forEach","push","components_CharacterSummary","key","id","indexOf","toggleCharacter","Container","Fab","size","color","OwnerView_InfoRow","onChange","FormControl","minWidth","FormLabel","htmlFor","Select","find","r","speed","input","OutlinedInput","map","val","MenuItem","Divider","SkillSelect","FormControlLabel","control","Checkbox","checked","zIndex","OwnerView_templateObject","OwnerView_templateObject2","OwnerView_templateObject3","Profile","hitDice","update","max","alignItems","justifyContent","margin","Badge","badgeContent","proBonus","maxHP","armor","dex","Attributes","saves","StatGrid","str","con","intel","wis","cha","Attributes_templateObject","Skills","skillDisplay","setDisplay","query","setQuery","lowerQuery","toLowerCase","list","filter","marginBottom","s","proCheck","Weapons","proWeapons","weaponList","weaponOptions","setWeaponOptions","selectedWeapon","setWeaponSelect","_loadWeaponOptions","loadWeaponOptions","weapon","w","proMod","proWeaponDesc","descArr","split","desc","category","isProWeapon","mod","properties","prop","isFinesse","damage_type","damage_dice","Inventory","itemList","gold","itemValues","setItemValues","goldValue","setGold","handleChange","maxWidth","goldCost","description","newGold","item","remove","SpellDetail","spell","close","Chip","icon","school","casting_time","duration","range","SpellPage","spells","slots","addSpell","spellList","setSpellList","openSlots","setOpenSlots","spellSearchResult","setSearchResults","showResults","setShow","newSpell","setNewSpell","selectedSpell","setSpell","_useState13","_useState14","showSpellDetail","setShowSpellDetail","_useState15","_useState16","showNewSpellDetail","setShowNewSpellDetail","_getNewSpells","results","known","slug","slotArr","components_SpellDetail","SpellList","onDelete","deleteIcon","Button","getNewSpells","SpellPage_templateObject","SpellBook","classInfo","spellDetails","setSpellDetails","cantrips","components_SpellPage","spellContainers","Level","_loadSpells","loadSpells","Fragment","CharacterSheet","characterData","updateCharacter","isDirty","setDirty","authorized","setAuthorized","setClassInfo","charUpdates","_save","_checkAuthorized","email","_getClassInfo","checkAuthorized","firebase","auth","currentUser","getClassInfo","SheetContainer","ProfileArea","components_Profile","hit_dice","StatsArea","components_Attributes","prof_saving_throws","SkillsArea","components_Skills","WeaponsArea","components_Weapons","prof_weapons","weapons","EquipmentArea","components_Inventory","inventory","Misc","spellcasting_ability","containers_SpellBook","info","CharacterSheet_templateObject","CharacterSheet_templateObject2","CharacterSheet_templateObject3","CharacterSheet_templateObject4","CharacterSheet_templateObject5","CharacterSheet_templateObject6","CharacterSheet_templateObject7","PartyView","location","sidebar","setSidebar","idList","setIDList","setCharacters","focus","setFocus","ids","search","socket","onmessage","event","updatedCharacters","parse","sort","b","c","containers_CharacterSheet","App","updateUser","login","_login","provider","GoogleAuthProvider","signInWithPopup","displayName","photoURL","_getUser","components_NavBar","Content","react_router","path","exact","component","containers_OwnerView","props","containers_PartyView","App_templateObject","Boolean","window","hostname","match","firebaseConfig","require","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bec56dc.chunk.js","sourcesContent":["\n// WILL NEED TO BE DYNAMIC BY ENV\nconst apiDomain = process.env.REACT_APP_DUNGEON_DOMAIN || 'localhost:4000';\n\nconst getWelcome = async () => {\n  const result = await fetch(`http://${apiDomain}/api`);\n  return result.text();\n};\n\nconst getCharacter = async (characterId = '') => {\n  const result = await fetch(`http://${apiDomain}/api/characters/${characterId}`);\n  return result.json();\n};\n\nconst checkUserAuth = async (characterId, user) => {\n  const result = await fetch(`http://${apiDomain}/api/characters/${characterId}/auth-users?user=${user}`);\n  return result.json();\n};\n\nconst saveCharacter = async (character) => {\n  try {\n    await fetch(`http://${apiDomain}/api/characters`,\n      {\n        method: 'POST',\n        body: JSON.stringify(character),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n  } catch (err) {\n    console.error(err);\n    return false;\n  }\n  return true;\n};\n\nconst watchCharacters = characterIds => new WebSocket(`ws://${apiDomain}/api/characters?id=${characterIds.join()}&watch=true`);\n\nconst getCharactersByOwner = async (owner = 'clayton.yarborough@gmail.com') => {\n  const result = await fetch(`http://${apiDomain}/api/characters?owner=${owner}`);\n  return result.json();\n};\n\nconst getLevelInfo = async (xp) => {\n  const result = await fetch(`http://${apiDomain}/api/level?xp=${xp}`);\n  return result.json();\n};\n\nconst getRaces = async () => {\n  const result = await fetch(`http://${apiDomain}/api/races`);\n  return result.json();\n};\n\nconst getClasses = async (xp) => {\n  const result = await fetch(`http://${apiDomain}/api/classes`);\n  return result.json();\n};\n\nconst getClass = async (name) => {\n  const result = await fetch(`http://${apiDomain}/api/classes?name=${name}`);\n  return result.json();\n};\n\nconst getWeapons = async () => {\n  const result = await fetch(`http://${apiDomain}/api/weapons`);\n  return result.json();\n};\n\nconst getSpells = async (slugs) => {\n  const result = await fetch(`http://${apiDomain}/api/spells?name=${slugs.join()}`);\n  return result.json();\n};\n\nconst getSpellsForLevel = async (level) => {\n  const result = await fetch(`http://${apiDomain}/api/spells?level=${level}`);\n  return result.json();\n};\n\nexport default {\n  getCharacter,\n  saveCharacter,\n  watchCharacters,\n  getCharactersByOwner,\n  getWelcome,\n  getLevelInfo,\n  checkUserAuth,\n  getRaces,\n  getClasses,\n  getClass,\n  getWeapons,\n  getSpells,\n  getSpellsForLevel,\n};\n","import styled from 'styled-components';\n\nexport const Spacer = styled.span`\n  flex: 1;\n`;\n\nexport const TopAnchor = styled.span`\n  position: absolute;\n  top: -.8em;\n  right: 0em;\n  z-index: 100;\n`;\n\nexport const BottomAnchor = styled.span`\n  position: fixed;\n  bottom: .313em;\n  right: .313em;\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  background: white;\n  box-shadow: lightgray 1px 1px .313em;\n  border-radius: .313em;\n  padding: .625em;\n  display: flex;\n  flex-direction: column;\n  margin: .313em;\n`;\n\nexport const HeaderBar = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: lightgray solid 1px;\n  margin-bottom: 1em;\n  & h1, h2, h3, h4, p {\n    margin: 0em;\n  }\n  & p {\n    font-size: .8em;\n  }\n`;\n\nexport const ActionBar = styled.span`\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const RowCenter = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContentWithSideBar = styled.div`\n  flex: 1; \n  display: grid;\n  grid-template-columns: 1fr 25em;\n  margin-bottom: 4.3em;\n  @media screen and (max-width: 62.5em){\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const SideBar = styled.div`\n  position: fixed;\n  width: 22em;\n  height: 100vh;\n  top: 3.75em;\n  padding: 1em;\n  right: 0em;\n  overflow-y: scroll;\n  z-index: 100;\n\n  @media screen and (max-width: 62.5em){\n    background-color: white;\n    box-shadow: lightgrey 1px 1px .313em;\n    right: -25em;\n    transition: right .3s ease;\n\n    &.open {\n      right: 0em;\n    }\n  }\n`;\n\nexport const SideBarToggle = styled.div`\n  position: fixed;\n  bottom: .313em;\n  right: .313em;\n  display: none;\n  z-index: 101;\n\n  @media screen and (max-width: 62.5em){\n    display: initial;\n  }\n`;\n\nexport const BasicBox = styled.div`\n  width: 4.6875em;\n  height: 4.6875em;\n    margin-left: .625em;\n`;\n","import React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Link } from 'react-router-dom';\n\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DungeonService from '../services/dungeonService';\nimport { Spacer } from './CustomStyled';\n\n\nfunction NavBar({ user }) {\n  // [Variable in State, Setter of Variable]\n  // hooks are indicated by the word `use` (linter looks for use keyword)\n  const [welcome, setWelcome] = useState('Just a moment...');\n\n  // Effects run immediately after render (including the first render)\n  // Don't be tempted to make useEffect async console will scream at you\n  useEffect(() => {\n    // Async calls are to be made inside useEffect then immediately called below\n    (async function getWelcome() {\n      try {\n        const welcomeServer = await DungeonService.getWelcome();\n        setWelcome(welcomeServer);\n      } catch (error) {\n        console.error(error);\n      }\n    }());\n    // Array at the end is requried to avoid looping\n    // indicates that this is only triggered on mount\n    // if we put [propVariable] inside it would trigger again on propVariable change\n    // See https://www.robinwieruch.de/react-hooks-fetch-data/ for indepth material\n  }, []);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Link to=\"/\">\n          <h3>{ welcome }</h3>\n        </Link>\n        <Spacer />\n        { user && <IconButton><Avatar alt={user.name} src={user.photo} /></IconButton> }\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  Card, HeaderBar, Spacer, ActionBar, Column,\n} from './CustomStyled';\n\n\nfunction CharacterSummary({\n  character, save, add, linkTo, open, highlight,\n}) {\n  return (\n    <Card style={highlight ? { background: 'lightblue' } : {}}>\n      <HeaderBar>\n        <Column>\n          <h4>{ character.name }</h4>\n          <p>{ character.race } { character.class }</p>\n        </Column>\n        <Spacer />\n        <ActionBar>\n          { linkTo\n            && <Link to={linkTo}>\n              <IconButton>\n                <i className=\"material-icons\">fullscreen</i>\n              </IconButton>\n               </Link>\n          }\n          { open\n            && <IconButton onClick={open}>\n              <i className=\"material-icons\">fullscreen</i>\n               </IconButton>\n          }\n          { add\n            && <IconButton onClick={add}>\n              <i className=\"material-icons\">group_add</i>\n               </IconButton>\n          }\n          { save\n            && <IconButton onClick={save}>\n              <i className=\"material-icons\">save</i>\n               </IconButton>\n          }\n        </ActionBar>\n      </HeaderBar>\n      <InfoRow>\n        <TextField variant=\"outlined\" disabled type=\"number\" label=\"Level\" value={character.level} />\n        <TextField variant=\"outlined\" disabled type=\"number\" label=\"Hit Points\" value={character.hp} />\n        <TextField variant=\"outlined\" disabled type=\"number\" label=\"Initiative\" value={character.initiative || ''} />\n      </InfoRow>\n    </Card>\n  );\n}\n\nexport default CharacterSummary;\n\nCharacterSummary.propTypes = {\n  character: PropTypes.shape({\n    name: PropTypes.string,\n    race: PropTypes.string,\n    class: PropTypes.string,\n  }).isRequired,\n  save: PropTypes.func,\n  add: PropTypes.func,\n  open: PropTypes.func,\n  linkTo: PropTypes.string,\n  highlight: PropTypes.bool,\n};\n\nCharacterSummary.defaultProps = {\n  save: null,\n  add: null,\n  linkTo: null,\n  open: null,\n  highlight: false,\n};\n\nconst InfoRow = styled.div`\n      display: flex;\n      margin-top: .62em;\n    `;\n","\nexport function calculateModifier(x, z) {\n  let y = Math.floor((x - 10) / 2);\n  y = z ? y + z : y;\n  return y < 0 ? `${y}` : `+${y}`;\n}\n\nexport function isFinesse(weapon) {\n  const finesse = weapon.properties.find((prop) => {\n    const text = prop.toLowerCase();\n    return text.indexOf('range') !== -1\n      || text.indexOf('finesse') !== -1;\n  });\n  return !!finesse;\n}\n\nexport function isProWeapon(weapon, proWeaponDesc) {\n  const descArr = proWeaponDesc.split(', ').map(desc => desc.toLowerCase());\n  const result = descArr.find(desc => desc.indexOf(weapon.name.toLowerCase()));\n  if (result) return true;\n  const categoryArr = weapon.category.split(' ').map(str => str.toLowerCase());\n  return !!categoryArr.find(category => !!descArr.find(desc => desc.indexOf(category)));\n}\n\nexport const skillsArray = [\n  {\n    label: 'Acrobatics',\n    check: 'dex',\n  },\n  {\n    label: 'Animal Handling',\n    check: 'wis',\n  },\n  {\n    label: 'Arcana',\n    check: 'intel',\n  },\n  {\n    label: 'Athletics',\n    check: 'str',\n  },\n  {\n    label: 'Deception',\n    check: 'cha',\n  },\n  {\n    label: 'History',\n    check: 'intel',\n  },\n  {\n    label: 'Insight',\n    check: 'wis',\n  },\n  {\n    label: 'Intimidation',\n    check: 'cha',\n  },\n  {\n    label: 'Investigation',\n    check: 'intel',\n  },\n  {\n    label: 'Medicine',\n    check: 'wis',\n  },\n  {\n    label: 'Nature',\n    check: 'intel',\n  },\n  {\n    label: 'Perception',\n    check: 'wis',\n  },\n  {\n    label: 'Performance',\n    check: 'cha',\n  },\n  {\n    label: 'Persuasion',\n    check: 'cha',\n  },\n  {\n    label: 'Religion',\n    check: 'intel',\n  },\n  {\n    label: 'Sleight of Hand',\n    check: 'dex',\n  },\n  {\n    label: 'Stealth',\n    check: 'dex',\n  },\n  {\n    label: 'Survival',\n    check: 'wis',\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Fab, TextField, IconButton, Select, MenuItem, OutlinedInput, FormControl, FormLabel, FormControlLabel, Checkbox, Divider,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport CharacterSummary from '../components/CharacterSummary';\nimport DungeonService from '../services/dungeonService';\nimport {\n  BottomAnchor, TopAnchor, HeaderBar, ActionBar, Card, Spacer, BasicBox,\n} from '../components/CustomStyled';\nimport { skillsArray } from '../services/helper';\n\nfunction OwnerView({ owner }) {\n  const [characters, updateCharacters] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [races, setRaces] = useState([]);\n  const [values, setValues] = useState({});\n  const [party, updateParty] = useState([]);\n  const [isAdding, setAdding] = useState(false);\n\n  async function getCharactersByOwner() {\n    const characterList = await DungeonService.getCharactersByOwner(owner);\n    updateCharacters(characterList || []);\n  }\n\n  function toggleCharacter(id) {\n    const i = party.indexOf(id);\n    if (i !== -1) updateParty([...party.slice(0, i), ...party.slice(i + 1)]);\n    else updateParty([...party, id]);\n  }\n\n  async function loadBackgroundOptions() {\n    const raceList = await DungeonService.getRaces();\n    setRaces(raceList);\n    const classList = await DungeonService.getClasses();\n    setClasses(classList);\n  }\n\n  function handleValueChange(field, numeric) {\n    return e => setValues({ ...values, [field]: numeric ? +e.target.value : e.target.value });\n  }\n\n  function raceSelect(e) {\n    const race = races.find(r => r.name === e.target.value);\n    setValues({ ...values, race: race.name, speed: race.speed });\n  }\n\n  function toggleSKill(e) {\n    const arr = values.proSkills || [];\n    const i = arr.findIndex(skill => skill === e.target.value);\n    if (i === -1) setValues({ ...values, proSkills: [...arr, e.target.value] });\n    else setValues({ ...values, proSkills: [...arr.slice(0, i), ...arr.slice(i + 1)] });\n  }\n\n  async function addCharacter() {\n    const data = { ...values, owner };\n    await DungeonService.saveCharacter(data);\n    setValues({});\n    setAdding(false);\n    getCharactersByOwner();\n  }\n\n  useEffect(() => {\n    getCharactersByOwner();\n  }, [owner]);\n\n  useEffect(() => {\n    if (!isAdding || races.length || classes.length) return;\n    loadBackgroundOptions();\n  }, [isAdding]);\n\n  const characterCards = [];\n  characters.forEach((character) => {\n    characterCards.push(\n      <CharacterSummary\n        key={character.id}\n        character={character}\n        highlight={party.indexOf(character.id) !== -1}\n        add={() => toggleCharacter(character.id)}\n        linkTo={`/character?id=${character.id}`}\n      />,\n    );\n  });\n\n  return (\n    <Container>\n      <TopAnchor>\n        <Fab size=\"small\" color=\"secondary\" onClick={() => setAdding(!isAdding)}>\n          <i className=\"material-icons\">{ !isAdding ? 'add' : 'close' }</i>\n        </Fab>\n      </TopAnchor>\n      { characterCards }\n      { isAdding\n        && <Card>\n          <HeaderBar>\n            <h4>New Character</h4>\n            <Spacer />\n            <ActionBar>\n              <IconButton onClick={addCharacter}>\n                <i className=\"material-icons\">done</i>\n              </IconButton>\n            </ActionBar>\n          </HeaderBar>\n          <InfoRow>\n            <TextField variant=\"outlined\" label=\"Name\" onChange={handleValueChange('name')} />\n            <BasicBox>\n              <TextField variant=\"outlined\" label=\"HP\" type=\"number\" onChange={handleValueChange('maxHP', true)} />\n            </BasicBox>\n          </InfoRow>\n          <InfoRow>\n            <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\n              <FormLabel htmlFor=\"race\">Race</FormLabel>\n              <Select\n                value={values.race || ''}\n                onChange={raceSelect}\n                input={<OutlinedInput id=\"race\" />}\n              >\n                {\n                  races.map(val => <MenuItem key={val.name} value={val.name}>{ val.name }</MenuItem>)\n                }\n              </Select>\n            </FormControl>\n            <Spacer />\n            <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\n              <FormLabel htmlFor=\"class\">Class</FormLabel>\n              <Select\n                value={values.class || ''}\n                onChange={handleValueChange('class')}\n                input={<OutlinedInput id=\"class\" />}\n              >\n                {\n                  classes.map(val => <MenuItem key={val.name} value={val.name}>{ val.name }</MenuItem>)\n                }\n              </Select>\n            </FormControl>\n          </InfoRow>\n          <Divider />\n          <HeaderBar>\n            <p><strong>Proficient Skills</strong></p>\n          </HeaderBar>\n          <SkillSelect>\n            { skillsArray.map(({ label }) => (\n              <FormControlLabel\n                key={label}\n                control={\n                  <Checkbox\n                    checked={(values.proSkills && values.proSkills.indexOf(label) !== -1) || false}\n                    value={label}\n                    onChange={toggleSKill}\n                    color=\"primary\"\n                  />\n                }\n                label={label}\n              />\n            )) }\n          </SkillSelect>\n           </Card>\n      }\n      { !!party.length\n        && <BottomAnchor>\n          <Link to={`/character?id=${party.join()}`} style={{ zIndex: 10 }}>\n            <Fab color=\"secondary\">\n              <i className=\"material-icons\">group</i>\n            </Fab>\n          </Link>\n           </BottomAnchor>\n      }\n    </Container>\n  );\n}\n\nexport default OwnerView;\n\nOwnerView.propTypes = {\n  owner: PropTypes.string.isRequired,\n};\n\nconst Container = styled.div`\n        position: relative;\n        width: 100vw;\n        display: grid;\n        grid-template-columns: repeat(auto-fill, 22em);\n        grid-gap: .625em;\n        justify-content: center;\n    `;\n\nconst InfoRow = styled.div`\n  display: flex;\n  margin-top: .62em;\n`;\n\nconst SkillSelect = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 150px);\n  grid-gap: 10px;\n  margin: 10px 0px;\n  justify-content: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, TextField } from '@material-ui/core';\nimport {\n  Card, Column, Row, BasicBox, Spacer,\n} from './CustomStyled';\nimport { calculateModifier } from '../services/helper';\n\nconst Profile = ({\n  character, hitDice, update, disabled,\n}) => {\n  function onChange(field, max) {\n    return (e) => {\n      let val = +e.target.value;\n      val = val > max ? max : val;\n      update({ ...character, [field]: val });\n    };\n  }\n\n  return (\n    <Card>\n      <Row style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\n        <Column>\n          <h2 style={{ margin: 0 }}>{ character.name }</h2>\n          <p style={{ margin: 0 }}>{ character.race } { character.class } ({ hitDice })</p>\n        </Column>\n        <Spacer />\n        <Badge badgeContent={`+${character.proBonus}`} color=\"secondary\">\n          <BasicBox>\n            <TextField variant=\"outlined\" disabled type=\"number\" label=\"Level\" value={character.level} />\n          </BasicBox>\n        </Badge>\n        <BasicBox>\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type=\"number\"\n            label={`HP/${character.maxHP}`}\n            value={character.hp}\n            onChange={onChange('hp')}\n          />\n        </BasicBox>\n        <BasicBox>\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type=\"number\"\n            label=\"AC\"\n            value={character.armor}\n            onChange={onChange('armor')}\n          />\n        </BasicBox>\n        <BasicBox>\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            type=\"number\"\n            label=\"Speed\"\n            value={character.speed}\n            onChange={onChange('speed')}\n          />\n        </BasicBox>\n        <Badge badgeContent={calculateModifier(character.dex)} color=\"secondary\">\n          <BasicBox>\n            <TextField\n              variant=\"outlined\"\n              disabled={disabled}\n              type=\"number\"\n              label=\"Init\"\n              value={character.initiative || ''}\n              onChange={onChange('initiative')}\n            />\n          </BasicBox>\n        </Badge>\n      </Row>\n    </Card>\n  );\n};\n\nexport default Profile;\n\nProfile.propTypes = {\n  character: PropTypes.shape({\n    name: PropTypes.string,\n    race: PropTypes.string,\n    class: PropTypes.string,\n  }).isRequired,\n  hitDice: PropTypes.string.isRequired,\n  update: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport PropTypes from 'prop-types';\nimport { Badge, TextField } from '@material-ui/core';\nimport { Card, HeaderBar } from './CustomStyled';\nimport { calculateModifier } from '../services/helper';\n\n\nfunction Attributes({\n  character, saves, update, disabled,\n}) {\n  function onChange(field) {\n    return (e) => {\n      const val = +e.target.value;\n      update({ ...character, [field]: val });\n    };\n  }\n\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>Stats</h2>\n      </HeaderBar>\n      <StatGrid>\n        <Badge badgeContent={calculateModifier(character.str)} color=\"secondary\">\n          <TextField variant=\"outlined\" disabled={disabled} type=\"number\" label=\"Strength\" value={character.str} onChange={onChange('str')} />\n        </Badge>\n        <Badge badgeContent={calculateModifier(character.dex)} color=\"secondary\">\n          <TextField variant=\"outlined\" disabled={disabled} type=\"number\" label=\"Dexterity\" value={character.dex} onChange={onChange('dex')} />\n        </Badge>\n        <Badge badgeContent={calculateModifier(character.con)} color=\"secondary\">\n          <TextField variant=\"outlined\" disabled={disabled} type=\"number\" label=\"Constitution\" value={character.con} onChange={onChange('con')} />\n        </Badge>\n        <Badge badgeContent={calculateModifier(character.intel)} color=\"secondary\">\n          <TextField variant=\"outlined\" disabled={disabled} type=\"number\" label=\"Intelligence\" value={character.intel} onChange={onChange('intel')} />\n        </Badge>\n        <Badge badgeContent={calculateModifier(character.wis)} color=\"secondary\">\n          <TextField variant=\"outlined\" disabled={disabled} type=\"number\" label=\"Wisdom\" value={character.wis} onChange={onChange('wis')} />\n        </Badge>\n        <Badge badgeContent={calculateModifier(character.cha)} color=\"secondary\">\n          <TextField variant=\"outlined\" disabled={disabled} type=\"number\" label=\"Charisma\" value={character.cha} onChange={onChange('cha')} />\n        </Badge>\n      </StatGrid>\n      <p className=\"min-margin\"><strong>Saving Throws:</strong> { `+${character.proBonus}` } { saves } </p>\n    </Card>\n  );\n}\n\nexport default Attributes;\n\nAttributes.propTypes = {\n  character: PropTypes.shape({\n    dex: PropTypes.number,\n    intel: PropTypes.number,\n    str: PropTypes.number,\n  }).isRequired,\n  saves: PropTypes.string.isRequired,\n  update: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n\nconst StatGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  grid-gap: .625em;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Divider, TextField } from '@material-ui/core';\nimport {\n  Row, Spacer, Card, HeaderBar, ActionBar,\n} from './CustomStyled';\nimport { calculateModifier, skillsArray } from '../services/helper';\n\nconst Skills = ({ character }) => {\n  const [skillDisplay, setDisplay] = useState(skillsArray);\n  const [query, setQuery] = useState('');\n\n  function proCheck(proSkills, skill) {\n    return proSkills.findIndex(s => s === skill) !== -1;\n  }\n\n  useEffect(() => {\n    const lowerQuery = query.toLowerCase();\n    const list = !query ? skillsArray\n      : skillsArray.filter(({ label }) => label.toLowerCase().indexOf(lowerQuery) === 0);\n    setDisplay(list);\n  });\n\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>Skills</h2>\n        <Spacer />\n        <ActionBar style={{ marginBottom: '0.3125em' }}>\n          <TextField label=\"Search\" value={query} onChange={e => setQuery(e.target.value)} />\n        </ActionBar>\n      </HeaderBar>\n      {\n        skillDisplay.map(skill => (\n          <div key={skill.label}>\n            <Row>\n              <p style={{ margin: '0.3125em' }}>{ skill.label }</p>\n              <Spacer />\n              <h4 style={{ margin: '0.3125em' }}>\n                { calculateModifier(\n                  character[skill.check],\n                  proCheck(character.proSkills, skill.label) ? character.proBonus : 0,\n                ) }\n              </h4>\n            </Row>\n            <Divider />\n          </div>\n        ))\n      }\n    </Card>\n  );\n};\n\nexport default Skills;\n\nSkills.propTypes = {\n  character: PropTypes.shape({\n    name: PropTypes.string,\n    race: PropTypes.string,\n    class: PropTypes.string,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  IconButton, TextField, FormControl, FormLabel, Select, OutlinedInput, MenuItem,\n} from '@material-ui/core';\nimport {\n  Card, HeaderBar, ActionBar, Row, Spacer, Column, BasicBox,\n} from './CustomStyled';\nimport { isFinesse, calculateModifier, isProWeapon } from '../services/helper';\nimport dungeonService from '../services/dungeonService';\n\nconst Weapons = ({\n  proWeapons, weaponList, dex, str, proBonus, update, disabled,\n}) => {\n  const [isAdding, setAdding] = useState(false);\n  const [weaponOptions, setWeaponOptions] = useState([]);\n  const [selectedWeapon, setWeaponSelect] = useState({});\n\n  async function loadWeaponOptions() {\n    const result = await dungeonService.getWeapons();\n    setWeaponOptions(result);\n  }\n\n  function onWeaponChange(e) {\n    const weapon = weaponOptions.find(w => w.name === e.target.value);\n    setWeaponSelect(weapon);\n  }\n\n  function addWeapon() {\n    update([...weaponList, selectedWeapon]);\n    setAdding(false);\n    setWeaponSelect({});\n  }\n\n  useEffect(() => {\n    if (isAdding && !weaponOptions.length) loadWeaponOptions();\n  }, [isAdding]);\n\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>Weapons</h2>\n        <Spacer />\n        { !disabled\n          && <ActionBar>\n            <IconButton onClick={() => setAdding(!isAdding)}>\n              <i className=\"material-icons\">{ isAdding ? 'close' : 'add' }</i>\n            </IconButton>\n             </ActionBar>\n        }\n      </HeaderBar>\n      { // ADD NEW WEAPON\n        isAdding\n        && <Row>\n          <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\n            <FormLabel htmlFor=\"class\">Weapon Select</FormLabel>\n            <Select\n              value={selectedWeapon.name || ''}\n              onChange={onWeaponChange}\n              input={<OutlinedInput id=\"weapon\" />}\n            >\n              {\n                weaponOptions.map(val => <MenuItem key={val.name} value={val.name}>{ val.name }</MenuItem>)\n              }\n            </Select>\n          </FormControl>\n          <Spacer />\n          <IconButton onClick={addWeapon}>\n            <i className=\"material-icons\">done</i>\n          </IconButton>\n           </Row>\n      }\n      { // DISPLAY ALL WEAPONS\n        weaponList.map((weapon) => {\n          const proMod = isProWeapon(weapon, proWeapons) ? proBonus : 0;\n          const mod = isFinesse(weapon) ? calculateModifier(dex, proMod) : calculateModifier(str, proMod);\n          return (\n            <Row key={`${weapon.name}`}>\n              <Column>\n                <h3 className=\"min-margin\">{ weapon.name }</h3>\n                <p className=\"min-margin\">{ weapon.damage_type }</p>\n              </Column>\n              <Spacer />\n              <BasicBox>\n                <TextField variant=\"outlined\" disabled label=\"Attack\" value={mod} />\n              </BasicBox>\n              <BasicBox>\n                <TextField variant=\"outlined\" disabled label=\"Damage\" value={`${weapon.damage_dice} ${mod}`} />\n              </BasicBox>\n            </Row>\n          );\n        })\n      }\n    </Card>\n  );\n};\n\nexport default Weapons;\n\nWeapons.propTypes = {\n  proWeapons: PropTypes.string.isRequired,\n  weaponList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    category: PropTypes.string,\n    damage_dice: PropTypes.string,\n    damage_type: PropTypes.string,\n    weight: PropTypes.string,\n  })).isRequired,\n  dex: PropTypes.number.isRequired,\n  str: PropTypes.number.isRequired,\n  proBonus: PropTypes.number.isRequired,\n  update: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  IconButton, TextField, Divider,\n} from '@material-ui/core';\nimport {\n  Card, HeaderBar, ActionBar, Row, Spacer, Column,\n} from './CustomStyled';\n\nconst Inventory = ({\n  itemList, gold, update, disabled,\n}) => {\n  const [isAdding, setAdding] = useState(false);\n  const [itemValues, setItemValues] = useState({});\n  const [goldValue, setGold] = useState(gold);\n\n  function handleChange(field, numeric) {\n    return (e) => {\n      setItemValues({ ...itemValues, [field]: numeric ? +e.target.value : e.target.value });\n    };\n  }\n\n  function addItem() {\n    update(goldValue, [...itemList, itemValues]);\n    setAdding(false);\n  }\n\n  function changeGold(e) {\n    const newGold = +e.target.value;\n    update(newGold, itemList);\n    setGold(newGold);\n  }\n\n  function remove(i) {\n    update(goldValue, [...itemList.slice(0, i), ...itemList.slice(i + 1)]);\n  }\n\n  useEffect(() => setGold(gold), [gold]);\n\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>Inventory</h2>\n        <Spacer />\n        { !disabled\n          && <ActionBar>\n            <IconButton onClick={() => setAdding(!isAdding)}>\n              <i className=\"material-icons\">{ isAdding ? 'close' : 'add' }</i>\n            </IconButton>\n             </ActionBar>\n        }\n      </HeaderBar>\n      { // ADD NEW ITEM\n        isAdding\n        && <Column>\n          <Row>\n            <TextField\n              style={{ maxWidth: 100 }}\n              variant=\"outlined\"\n              type=\"number\"\n              label=\"Value (gp)\"\n              value={itemValues.goldCost || ''}\n              onChange={handleChange('goldCost', true)}\n            />\n            <TextField\n              style={{ maxWidth: 150 }}\n              variant=\"outlined\"\n              label=\"Name\"\n              value={itemValues.name || ''}\n              onChange={handleChange('name')}\n            />\n            <Spacer />\n            <IconButton onClick={addItem}>\n              <i className=\"material-icons\">done</i>\n            </IconButton>\n          </Row>\n          <TextField\n            variant=\"outlined\"\n            label=\"Description (optional)\"\n            value={itemValues.description || ''}\n            onChange={handleChange('description')}\n          />\n           </Column>\n      }\n\n      <Row style={{ justifyContent: 'flex-end' }}>\n        <TextField\n          style={{ maxWidth: 150 }}\n          variant=\"outlined\"\n          type=\"number\"\n          label=\"Gold Pieces\"\n          value={goldValue || 0}\n          onChange={changeGold}\n        />\n      </Row>\n\n      { // DISPLAY ALL ITEMS\n        itemList.map((item, i) => (\n          <Column key={`${item.name}`}>\n            <Row style={{ alignItems: 'center' }}>\n              <h4 className=\"min-margin\">{ item.name }</h4>\n              <p className=\"min-margin\"> ({ item.goldCost }gp)</p>\n              <Spacer />\n              <IconButton color=\"secondary\" onClick={() => remove(i)}>\n                <i className=\"material-icons\">close</i>\n              </IconButton>\n            </Row>\n            { item.description && <p className=\"min-margin\">{ item.description }</p> }\n            <Divider />\n          </Column>\n        ))\n      }\n    </Card>\n  );\n};\n\nexport default Inventory;\n\nInventory.propTypes = {\n  itemList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    category: PropTypes.string,\n    damage_dice: PropTypes.string,\n    damage_type: PropTypes.string,\n    weight: PropTypes.string,\n  })).isRequired,\n  gold: PropTypes.number.isRequired,\n  update: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Chip, Divider, IconButton, Button,\n} from '@material-ui/core';\nimport {\n  Column, Row, HeaderBar, Spacer,\n} from './CustomStyled';\n\nconst SpellDetail = ({ spell, close }) => (\n  <Column>\n    <HeaderBar>\n      <Spacer />\n      <IconButton onClick={close}>\n        <i className=\"material-icons\">close</i>\n      </IconButton>\n    </HeaderBar>\n    <Row>\n      <Chip\n        icon={<i className=\"material-icons\">school</i>}\n        label={spell.school}\n        variant=\"outlined\"\n      />\n      <Chip\n        icon={<i className=\"material-icons\">timer</i>}\n        label={spell.casting_time}\n        variant=\"outlined\"\n      />\n      <Chip\n        icon={<i className=\"material-icons\">timelapse</i>}\n        label={spell.duration}\n        variant=\"outlined\"\n      />\n      <Chip\n        icon={<i className=\"material-icons\">wifi_tethering</i>}\n        label={spell.range}\n        variant=\"outlined\"\n      />\n    </Row>\n    <p className=\"min-margin\">{ spell.desc }</p>\n    <Divider />\n    <Row>\n      <Spacer />\n    </Row>\n  </Column>\n);\n\nexport default SpellDetail;\n\nSpellDetail.propTypes = {\n  spell: PropTypes.shape({\n    name: PropTypes.string,\n    desc: PropTypes.string,\n    school: PropTypes.string,\n    duration: PropTypes.string,\n    casting_time: PropTypes.string,\n    range: PropTypes.string,\n  }).isRequired,\n  close: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Checkbox, Button, Chip, IconButton, Divider,\n} from '@material-ui/core';\nimport {\n  Card, HeaderBar, Spacer, ActionBar, Column, Row,\n} from './CustomStyled';\nimport dungeonService from '../services/dungeonService';\nimport SpellDetail from './SpellDetail';\n\nconst SpellPage = ({\n  level, spells, slots, addSpell,\n}) => {\n  const [spellList, setSpellList] = useState([]);\n  const [openSlots, setOpenSlots] = useState([]);\n  const [spellSearchResult, setSearchResults] = useState([]);\n  const [showResults, setShow] = useState(false);\n  const [newSpell, setNewSpell] = useState({});\n  const [selectedSpell, setSpell] = useState({});\n  const [showSpellDetail, setShowSpellDetail] = useState(false);\n  const [showNewSpellDetail, setShowNewSpellDetail] = useState(false);\n\n  async function getNewSpells() {\n    const results = await dungeonService.getSpellsForLevel(level);\n    setSearchResults(results.filter(spell => !spellList.find(known => known.slug === spell.slug)));\n  }\n\n  function loadSpellSearch() {\n    if (!spellSearchResult.length) getNewSpells();\n    setShow(true);\n  }\n\n  function learn(spell) {\n    addSpell(spell);\n    setShow(false);\n    setNewSpell({});\n  }\n\n  useEffect(() => {\n    setSpellList(\n      spells\n        .filter(spell => (spell.level === 'Cantrip' && level === 'Cantrip') || spell.level === `${level}-level`),\n    );\n  }, [spells]);\n\n  useEffect(() => {\n    const slotArr = [];\n    for (let i = 0; i < slots; i++) {\n      slotArr.push(false);\n    }\n    setOpenSlots(slotArr);\n  }, [slots]);\n\n  return (\n    <Card>\n      <HeaderBar>\n        <h2>{ level } Level Spells</h2>\n        <Spacer />\n        <ActionBar>\n          { openSlots.map((val, i) => (\n            <Checkbox\n              key={`${level}-slot-${i}`}\n              checked={val}\n              value={i}\n              onChange={() => setOpenSlots([...openSlots.slice(0, i), !val, ...openSlots.slice(i + 1)])}\n            />\n          ))\n          }\n        </ActionBar>\n      </HeaderBar>\n\n      {/* KNOWN SPELLS */ }\n      <Column>\n        { !!selectedSpell.name && showSpellDetail\n          && <SpellDetail spell={selectedSpell} close={() => { setSpell({}); setShowSpellDetail(false); }} />\n        }\n        <SpellList>\n          { spellList\n            .map(spell =>\n              <Chip\n                key={spell.name}\n                label={spell.name}\n                variant=\"outlined\"\n                onClick={() => setSpell(spell)}\n                color={spell.name === selectedSpell.name ? 'primary' : 'secondary'}\n                onDelete={() => { setShowSpellDetail(true); setSpell(spell); }}\n                deleteIcon={<i className=\"material-icons\">info</i>}\n              />)\n          }\n        </SpellList>\n        <Divider />\n      </Column>\n\n      {/* NEW SPELL LOOKUP */ }\n      <Column>\n        { !!newSpell.name && showNewSpellDetail\n          && <SpellDetail spell={newSpell} close={() => { setNewSpell({}); setShowNewSpellDetail(false); }} />\n        }\n        <SpellList>\n          { showResults\n            && spellSearchResult\n              .map(spell =>\n                <Chip\n                  key={spell.name}\n                  label={spell.name}\n                  variant=\"outlined\"\n                  onClick={() => setNewSpell(spell)}\n                  color={spell.name === newSpell.name ? 'primary' : 'secondary'}\n                  onDelete={() => { setShowNewSpellDetail(true); setNewSpell(spell); }}\n                  deleteIcon={<i className=\"material-icons\">info</i>}\n                />)\n          }\n        </SpellList>\n      </Column>\n      { !showResults\n        ? <Button color=\"secondary\" onClick={loadSpellSearch}>See Spells</Button>\n        : <Row style={{ justifyContent: 'center' }}>\n          <Button onClick={() => {\n            setShow(false);\n            setNewSpell({});\n          }}\n          >Cancel\n          </Button>\n          <Button\n            disabled={!newSpell.name}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => learn(newSpell)}\n          >Learn Spell\n          </Button>\n          </Row>\n      }\n    </Card>\n  );\n};\n\nexport default SpellPage;\n\nSpellPage.propTypes = {\n  level: PropTypes.string.isRequired,\n  spells: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    desc: PropTypes.string,\n    level: PropTypes.string,\n    casting_time: PropTypes.string,\n  })).isRequired,\n  slots: PropTypes.number.isRequired,\n  addSpell: PropTypes.func.isRequired,\n};\n\nconst SpellList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 200px);\n  grid-gap: 10px;\n  margin: 10px 0px;\n  justify-content: center;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport SpellPage from '../components/SpellPage';\nimport dungeonService from '../services/dungeonService';\n\nconst SpellBook = ({\n  spells, classInfo, level, update,\n}) => {\n  const [spellDetails, setSpellDetails] = useState([]);\n\n  function addSpell(spell) {\n    update([...spells, spell.slug]);\n  }\n\n  const cantrips = (\n    <SpellPage\n      level=\"Cantrip\"\n      slots={0}\n      spells={spellDetails || []}\n      addSpell={addSpell}\n    />);\n\n  const spellContainers = classInfo.Level.map((val, i) => {\n    if (i > level - 1 || !classInfo[val][i]) return null;\n    return (\n      <SpellPage\n        key={`${val}-level-spells`}\n        level={val}\n        slots={+classInfo[val][i]}\n        spells={spellDetails || []}\n        addSpell={addSpell}\n      />\n    );\n  });\n\n  async function loadSpells(slugs) {\n    const result = await dungeonService.getSpells(slugs);\n\n    setSpellDetails(result);\n  }\n\n  useEffect(() => {\n    loadSpells(spells);\n  }, [spells]);\n\n  return (\n    <>\n      { cantrips }\n      { spellContainers }\n    </>\n  );\n};\n\nexport default SpellBook;\n\nSpellBook.propTypes = {\n  spells: PropTypes.arrayOf(PropTypes.string).isRequired,\n  classInfo: PropTypes.shape({\n    info: PropTypes.shape({\n      '1st': PropTypes.arrayOf(PropTypes.string),\n      '2nd': PropTypes.arrayOf(PropTypes.string),\n      '3rd': PropTypes.arrayOf(PropTypes.string),\n      '4th': PropTypes.arrayOf(PropTypes.string),\n      '5th': PropTypes.arrayOf(PropTypes.string),\n      '6th': PropTypes.arrayOf(PropTypes.string),\n      '7th': PropTypes.arrayOf(PropTypes.string),\n      '8th': PropTypes.arrayOf(PropTypes.string),\n      '9th': PropTypes.arrayOf(PropTypes.string),\n      'Cantrips Known': PropTypes.arrayOf(PropTypes.string),\n      Level: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }).isRequired,\n  level: PropTypes.number.isRequired,\n  update: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Fab } from '@material-ui/core';\nimport Profile from '../components/Profile';\nimport Attributes from '../components/Attributes';\nimport Skills from '../components/Skills';\nimport { TopAnchor } from '../components/CustomStyled';\nimport dungeonService from '../services/dungeonService';\nimport Weapons from '../components/Weapons';\nimport Inventory from '../components/Inventory';\nimport SpellBook from './SpellBook';\n\n\nconst CharacterSheet = ({ characterData }) => {\n  const [character, updateCharacter] = useState(characterData);\n  const [isDirty, setDirty] = useState(false);\n  const [authorized, setAuthorized] = useState(false);\n  const [classInfo, setClassInfo] = useState(false);\n\n  function update(charUpdates) {\n    setDirty(true);\n    updateCharacter(charUpdates);\n  }\n\n  async function save() {\n    setDirty(false);\n    const success = await dungeonService.saveCharacter(character);\n    if (!success) setDirty(true);\n  }\n\n  async function checkAuthorized(user) {\n    if (!character) return;\n    const result = await dungeonService.checkUserAuth(character.id, user.email);\n    setAuthorized(result.authorized);\n  }\n\n  async function getClassInfo(className) {\n    if (!className) return;\n    const result = await dungeonService.getClass(className);\n    setClassInfo(result);\n  }\n\n  useEffect(() => {\n    updateCharacter(characterData);\n  }, [characterData]);\n\n  useEffect(() => {\n    checkAuthorized(firebase.auth().currentUser);\n    getClassInfo(character.class);\n  }, [character]);\n\n  return (\n    <SheetContainer>\n      { isDirty\n        && <TopAnchor>\n          <Fab color=\"secondary\" size=\"small\" onClick={save}>\n            <i className=\"material-icons\">done</i>\n          </Fab>\n           </TopAnchor>\n      }\n      <ProfileArea>\n        <Profile character={character} hitDice={classInfo.hit_dice || ''} update={update} disabled={!authorized} />\n      </ProfileArea>\n      <StatsArea>\n        <Attributes character={character} saves={classInfo.prof_saving_throws || ''} update={update} disabled={!authorized} />\n      </StatsArea>\n      <SkillsArea>\n        <Skills character={character} />\n      </SkillsArea>\n      <WeaponsArea>\n        <Weapons\n          disabled={!authorized}\n          proWeapons={classInfo.prof_weapons || ''}\n          weaponList={character.weapons || []}\n          dex={character.dex}\n          str={character.str}\n          proBonus={character.proBonus}\n          update={weapons => update({ ...character, weapons })}\n        />\n      </WeaponsArea>\n      <EquipmentArea>\n        <Inventory\n          disabled={!authorized}\n          itemList={character.inventory || []}\n          gold={character.gold}\n          update={(gold, inventory) => update({ ...character, gold, inventory })}\n        />\n      </EquipmentArea>\n      <Misc>\n        { classInfo && classInfo.spellcasting_ability\n          && <SpellBook\n            classInfo={classInfo.info}\n            level={character.level}\n            spells={character.spells || []}\n            update={spells => update({ ...character, spells })}\n          />\n        }\n      </Misc>\n    </SheetContainer>\n  );\n};\n\nexport default CharacterSheet;\n\nCharacterSheet.propTypes = {\n  characterData: PropTypes.shape({\n    name: PropTypes.string,\n    race: PropTypes.string,\n    class: PropTypes.string,\n  }).isRequired,\n};\n\nconst SheetContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-gap: .625em;\n    grid-template-columns: 18.75em minmax(auto, 15.625em) minmax(auto, 12.5em);\n    grid-template-rows: auto 14.5em auto auto auto;\n    grid-template-areas:\n      \"pro pro pro\"\n      \"skill stat stat\"\n      \"skill wpn wpn\"\n      \"skill eqp eqp\"\n      \"etc etc etc\";\n  \n  @media screen and (max-width: 36em){\n        display: flex;\n      flex-direction: column;\n    }\n  `;\n\nconst ProfileArea = styled.div`\n    grid-area: pro;\n  `;\nconst StatsArea = styled.div`\n    grid-area: stat;\n  `;\nconst SkillsArea = styled.div`\n    grid-area: skill;\n  `;\nconst WeaponsArea = styled.div`\n    grid-area: wpn;\n  `;\nconst EquipmentArea = styled.div`\n    grid-area: eqp;\n  `;\nconst Misc = styled.div`\n    grid-area: etc;\n    display: flex;\n    flex-direction: column;\n  `;\n","import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Fab } from '@material-ui/core';\nimport DungeonService from '../services/dungeonService';\nimport {\n  SideBar, SideBarToggle, ContentWithSideBar, RowCenter,\n} from '../components/CustomStyled';\nimport CharacterSummary from '../components/CharacterSummary';\nimport CharacterSheet from './CharacterSheet';\n\nfunction PartyView({ location }) {\n  const [sidebar, setSidebar] = useState(false);\n  const [idList, setIDList] = useState([]);\n  const [characters, setCharacters] = useState([]);\n  const [focus, setFocus] = useState(null);\n\n  function getCharacter(id) {\n    return characters.find(c => c.id === id);\n  }\n\n  useEffect(() => {\n    const ids = location.search.split('id=')[1].split(',');\n    setIDList(ids);\n    const socket = DungeonService.watchCharacters(ids);\n    socket.onmessage = (event) => {\n      const updatedCharacters = JSON.parse(event.data).sort((a, b) => {\n        if (!a.initiative) {\n          if (!b.initiative) return 0;\n          return 1;\n        }\n        if (!b.initiative) return -1;\n        return b.initiative - a.initiative;\n      });\n      setCharacters(updatedCharacters);\n    };\n\n    return () => socket.close();\n  }, []);\n\n  useEffect(() => {\n    const id = !focus ? idList[0] : focus.id || idList[0];\n    if (!id) return;\n    setFocus(getCharacter(id));\n  }, [characters, idList]);\n  if (!focus) return null;\n\n  return (\n    <ContentWithSideBar>\n      <RowCenter>\n        <CharacterSheet characterData={ focus } />\n      </RowCenter>\n      {\n        characters.length > 1\n        && <>\n          <SideBar className={ sidebar ? 'open' : '' }>\n            {\n              characters\n                .map(character => (\n                  <CharacterSummary\n                    key={ character.id }\n                    character={ character }\n                    open={ () => setFocus(character) }\n                    highlight={ focus.id === character.id }\n                  />\n                ))\n            }\n          </SideBar>\n          <SideBarToggle>\n            <Fab color=\"secondary\" onClick={ () => setSidebar(!sidebar) }>\n              <i className=\"material-icons\">{ sidebar ? 'close' : 'group' }</i>\n            </Fab>\n          </SideBarToggle>\n        </>\n      }\n    </ContentWithSideBar>\n  );\n}\n\nPartyView.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\n\nexport default PartyView;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport firebase from 'firebase';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport OwnerView from './containers/OwnerView';\nimport PartyView from './containers/PartyView';\n\nimport './App.css';\n\nfunction App() {\n  const [user, updateUser] = useState();\n\n  async function login() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const { user: info } = await firebase.auth().signInWithPopup(provider);\n    return { name: info.displayName, email: info.email, photo: info.photoURL };\n  }\n\n  useEffect(() => {\n    (async function getUser() {\n      const info = await login();\n      updateUser(info);\n    }());\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App \">\n        <NavBar user={user} />\n        { user\n          && <Content>\n            <Route path=\"/\" exact component={() => <OwnerView owner={user.email} />} />\n            <Route path=\"/character\" exact component={props => <PartyView {...props} />} />\n             </Content>\n        }\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\nconst Content = styled.div`\n  display: flex;\n  margin-top: 1em;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as firebase from 'firebase/app';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst firebaseConfig = require('./secret_auth_config.json');\n\n\nfirebase.initializeApp(firebaseConfig);\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}